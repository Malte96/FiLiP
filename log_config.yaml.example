---
version: 1  # identifies the dictConfig version
disable_existing_loggers: False # False, so underlying loggers, e.g. urllib3 are not deactivated
formatters: # defines two formats for messages
  standard:
    format: "%(asctime)s - %(levelname)s - %(name)s - %(message)s" # standard logger output: Time, name of the module, level name of the error / info / message
  error:
    format: "%(asctime)s - %(levelname)s <PID %(process)d:%(processName)s> %(name)s.%(funcName)s(): %(message)s" # Advanced logger output, further details include process and function name

handlers: # defining different handlers, that enable file setting, or level setting fo the respective output
  console: # a handler for console output
    class: logging.StreamHandler # sends logging to the respective stream, in this case the console
    level: DEBUG
    formatter: standard # enables choosing a previously defined format for the logging message
    stream: ext://sys.stdout

  info_file_handler:
    class: logging.handlers.RotatingFileHandler # enables roll over of files, when the current log file exceeds the maxbytes
    level: INFO # which level is the respective level for the file handler, in this case for example only logging messages of the level info are written
    formatter: standard
    filename: info.log # sets the path for the respective log file
    maxBytes: 10485760 # sets the maximum log file size to 10 mb
    backupCount: 20
    encoding: utf8

  error_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: standard
    filename: errors.log
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8

  debug_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: error
    filename: debug.log
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8

loggers: # enables the previously configuration of different loggers, that differ from the root logger
  iot:
    level: DEBUG # sets the level for the respective logger
    handlers: [console, info_file_handler, error_file_handler, debug_file_handler] # sets the handlers
    propagate: no # set whether logged events are passed to higher loggers

  orion:
    level: DEBUG
    handlers: [console, info_file_handler, error_file_handler, debug_file_handler]
    propagate: no

  cb_request:
    level: DEBUG
    handlers: [console, info_file_handler, error_file_handler, debug_file_handler]
    propagate: no

  subscription:
    level: DEBUG
    handlers: [console, info_file_handler, error_file_handler, debug_file_handler]
    propagate: no

  timeseries:
    level: DEBUG
    handlers: [console, info_file_handler, error_file_handler, debug_file_handler]
    propagate: no





root: # defining a basic root logger, that is the default logger
  level: DEBUG # set the level for the root logger
  handlers: [console, info_file_handler, error_file_handler, debug_file_handler] # set handlers for the default logger
